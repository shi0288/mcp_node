/**
 * Created by liujun on 2016/7/21.
 */
var dc = require('mcp_db').dc;

var engine = require('mcp_engine');
var creditorDebxEngine = engine.creditorDebxEngine;

var CreditorService = function () {
};

/**
 * 获取当前还款日
 * @param loan_id
 */
CreditorService.prototype.getCurRepayDay = function (loan_id, cb) {
    var conn = dc.main.getConn();
    var sql = "SELECT * FROM loan_repay WHERE loan_id = " + loan_id + " AND status =  0 ORDER BY period LIMIT 1";
    var sql2 = "";
        conn.execute(sql, [], function (err, data) {
            console.log("需要知道的参数为：" + data[0]);
            if ( data[0] == null ) {
                conn.execute(sql2, [], function (err, data) {
                    cb(err, data[0]);
                });
            } else {
                cb(err, data[0]);
            }
        });
    return;
};
/**
 * 获取标的剩余本金
 * @param loan_id
 * @param cb
 */
CreditorService.prototype.getSurMoney = function (loan_id, cb) {
    var conn = dc.main.getConn();
    var sql = "SELECT SUM(money) surMoney FROM loan_repay WHERE loan_id = " + loan_id + " AND status =  0";
    conn.execute(sql, [], function (err, data) {
        console.log("sql剩余本金为：" + data[0].surMoney);
        cb(err, data[0].surMoney);
    });
}

CreditorService.prototype.getSurCount = function (loan_id, cb) {
    var conn = dc.main.getConn();
    var sql = "SELECT count(0) surCount FROM loan_repay WHERE loan_id = " + loan_id + " AND status =  0 ";
    conn.execute(sql, [], function (err, data) {
        cb(err, data[0]);
    });
    return;
};
/**
 * 债权的时间间隔
 * @param loan_id
 * @param invest_id
 * @param cb
 */
CreditorService.prototype.getLastCreditor = function (invest_id, cb) {
    var conn = dc.main.getConn();
    var sql = "SELECT COUNT(0) count FROM creditor_loan WHERE invest_id = " + invest_id + " AND status =  1";
    var sql2 = "SELECT * FROM creditor_loan WHERE invest_id = " + invest_id + " AND status =  1 ORDER BY create_time DESC LIMIT 1";
    conn.execute(sql, [], function (err, data) {
        if(err) {
            console.log(err);
        }else {
            if(data[0].count != 0) {
                conn.execute(sql2, [], function (err, data) {
                    if(err) {
                        console.log(err);
                    }else {
                        cb(err, data[0]);
                    }
                });
            }else {
                cb(err, null);
            }
        }
    });
};
/**
 * 多次债权转让的时间间隔
 * @param creditor_invest_id
 * @param cb
 */
CreditorService.prototype.getMoreLastCreditor = function (creditor_invest_id, cb) {
    var conn = dc.main.getConn();
    var sql = "SELECT COUNT(0) count FROM creditor_loan WHERE creditor_invest_id = " + creditor_invest_id + " AND status =  1";
    var sql2 = "SELECT * FROM creditor_loan WHERE creditor_invest_id = " + creditor_invest_id + " AND status =  1 ORDER BY create_time DESC LIMIT 1";
    conn.execute(sql, [], function (err, data) {
        if(err) {
            console.log(err);
        }else {
            if(data[0].count != 0) {
                conn.execute(sql2, [], function (err, data) {
                    if(err) {
                        console.log(err);
                    }else {
                        cb(err, data[0]);
                    }
                });
            }else {
                cb(err, null);
            }
        }
    });
};

/**
 * 购买债权处理
 * @param money
 * @param userID
 * @param accept_money
 * @param sur_money
 * @param id
 * @param status
 * @param create_time
 * @param creditor_loan_id
 * @param user_id
 * @param cb
 */
CreditorService.prototype.buyTran = function (money, userID, accept_money,sur_money,id,status,create_time,creditor_loan_id, loanRepayObj, creditorLoanObj,investObj,loanObj,curRepayDay,curDay,preRepayDay,creditorValueInvest,cre_inv_suc_man,surMoney, cb) {
    var tran_user_id = creditorLoanObj.tran_user_id;
    console.log("-------------->" + creditorLoanObj.creditor_type);
    console.log("转让债权的用户id为：" + tran_user_id);
    console.log("-------------->" + sur_money);
    console.log("-------------->2" + money);
    console.log("转让人债权增加的金额为：" + (accept_money - cre_inv_suc_man));
    
    var loan_id = loanRepayObj.loan_id;
    var i = loanRepayObj.period;
    var j = loanRepayObj.all_period;
    var conn = dc.main.getConn();
    var sql = "UPDATE account SET money = " + sur_money  + " WHERE user_id = '" + userID + "' ";
    var sql2 = "insert INTO creditor_invest(id, loan_id, money,accept_money,status,create_time,user_id,creditor_loan_id,creditor_value,creditor_man_fee) VALUES (" +
         id + "," + loanObj.id + "," + money + "," + accept_money + "," + status + ", '" + create_time + "'" + ", '" + userID + "'" + ", '" + creditor_loan_id + "'" + "," + creditorValueInvest + "," + cre_inv_suc_man +
    ");";
    var sql3 = "SELECT SUM(interest) as countInterest FROM loan_repay WHERE loan_id = '" + loan_id + "' ";
    var sql4 = "UPDATE account SET money = money" + "+" + (accept_money - cre_inv_suc_man) + " WHERE user_id = '" + tran_user_id + "' ";
    var sql5 = "UPDATE creditor_loan SET tran_price = tran_price" + "+" + money + " WHERE id = '" + creditor_loan_id + "' ";
    var sql6 = "";
    conn.execute(sql, [], function (err, data) {
        if(err) {
            console.log(err);
        }else {
            conn.execute(sql4, [], function (err, data) {
                if (err) {
                    console.log(err);
                }else {
                    conn.execute(sql5, [], function (err, data) {
                        if (err) {
                            console.log(err);
                        }else {
                            conn.execute(sql2, [], function (err, data) {
                                if(err) {
                                    console.log(err);
                                }else {
                                    conn.execute(sql3, [], function (err, data) {
                                        var data = data[0].countInterest;
                                        console.log("sql语句执行标的的总利息为：" + data);
                                        if(err) {
                                            console.log(err);
                                        }else {
                                            switch (creditorLoanObj.creditor_type) {
                                                case 'debx' :
                                                    //本金和利息更新操作
                                                    creditorDebxEngine.debxCreditor(id,money,creditorLoanObj,i,j,loanObj,loanRepayObj,curRepayDay,curDay,preRepayDay,data,investObj,surMoney,function (err) {
                                                        //console.log(err);
                                                    });
                                                    break;

                                                case 'ayfx':
                                                    break;

                                                default:
                                            }
                                            cb(err, null);
                                        }
                                    });
                                }
                            });
                        }
                    });
                }
            });
        }
    });
};

module.exports = new CreditorService();