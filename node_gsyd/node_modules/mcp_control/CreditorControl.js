/**
 * Created by liujun on 2016/7/20.
 */
var async = require('async');
var moment= require('moment');
var dc = require('mcp_db').dc;
var esut = require('easy_util');
var log = esut.log;
var digestUtil = esut.digestUtil;
var dateUtil = esut.dateUtil;
var util = require('mcp_util');
var creditorDateUtil = util.creditorDateUtil;

var cons = require('mcp_constants');
var userType = cons.userType;
var loanStatus = cons.loanStatus;
var investStatus = cons.investStatus;
var taskCons = cons.taskCons;
var userBillCons = cons.userBillCons;
var calCons = cons.calculateCons;

var config = require('mcp_config');
var ec = config.ec;
var prop = config.prop;

var util = require('mcp_util');
var dateMathUtil = util.dateMathUtil;

var service = require('mcp_service');
var digestService = service.digestService;
var kvService = service.kvService;
var taskService = service.taskService;
var userBillService = service.userBillService;
var calculateService = service.calculateService;
var creditorCalculateService = service.creditorCalculateService;
var checkService = service.checkService;

var zq = require('mcp_zq');
var creditorService = zq.creditorService;

var CreditorControl = function () {
};

CreditorControl.prototype.handle = function (headNode, bodyStr, userCb) {
    var self = this;
    async.waterfall([
        //是否是支持的cmd
        function (cb) {
            if (typeof self['handle' + headNode.cmd] === 'function') {
                cb(null);
            } else {
                cb(ec.E2010);
            }
        },
        //校验头的用户类型是否合法
        function (cb) {
            var userTypeId = userType[headNode.userType];
            if (userTypeId == undefined) {
                cb(ec.E9030);
            }
            else {
                cb(null, userTypeId);
            }
        },
        //获得密钥
        function (userTypeId, cb) {
            digestService.getKey({fromType: prop.digestFromType.DB, userId: headNode.userId, userType: userTypeId},
                function (err, key) {
                    cb(err, key);
                });
        },
        //先解密
        function (key, cb) {
            var decodedBodyStr = digestUtil.check(headNode, key, bodyStr);
            if (decodedBodyStr == null) {
                cb(ec.E9020);
                return;
            }
            var bodyNode;
            try {
                bodyNode = JSON.parse(decodedBodyStr);
                headNode.key = key;
            }
            catch (err) {
                cb(ec.E0005);
                return;
            }
            cb(null, bodyNode);

        },
        //check the param
        function (bodyNode, cb) {
            var method = 'check' + headNode.cmd;
            self[method](headNode, bodyNode, function (err) {
                cb(err, bodyNode);
            });
        },
        //业务处理
        function (bodyNode, cb) {
            var cmd = 'handle' + headNode.cmd;
            self[cmd](headNode, bodyNode, cb);
        }
    ], function (err, bodyNode) {
        userCb(err, bodyNode);
    });
};

/**
 * @param headNode
 * @param bodyNode
 * @type {CreditorControl}
 * @Description  CR01 债权转让
 */
CreditorControl.prototype.checkCR01 = function (headNode, bodyNode, cb) {
    cb(null);
};

CreditorControl.prototype.handleCR01 = function (headNode, bodyNode, cb) {
    async.waterfall([
        //验证债权转让的条件
        function (cb) {
            var creType = 0;
            var investTab = dc.main.get('invest');
            investTab.findOne({id: bodyNode.invest_id}, {}, [], function (err, investObj) {
                console.log("查出的已投资的记录为：" + investObj);
                if (investObj != null){
                    cb(err , investObj, null, creType);
                } else {
                    creType = 1;
                    //处理多次债权转让
                    var creditor_investTab = dc.main.get('creditor_invest');
                    creditor_investTab.findOne({id:bodyNode.invest_id}, {}, [], function (err, creditor_investObj) {
                        if(creditor_investObj != null){
                            cb(err , investObj, creditor_investObj, creType);
                        }else {
                            console.log("债权转让的投资记录异常");
                            cb(true);
                        }
                    });
                }
            });
        },
        function (investObj, creditor_investObj, creType, cb) {
            if (creType == 0) {
                var loanTab = dc.main.get('loan');
                loanTab.findOne({id: investObj.loan_id}, {}, [], function (err , loanObj) {
                    cb(err , loanObj, investObj, creditor_investObj, creType);
                });
            } else if (creType == 1) {
                var loanTab = dc.main.get('loan');
                loanTab.findOne({id: creditor_investObj.loan_id}, {}, [], function (err , loanObj) {
                    cb(err , loanObj, investObj, creditor_investObj, creType);
                });
            }else {
                console.log("系统不进行处理");
                cb(ec.E9999);
            }
        },
        function (loanObj, investObj, creditor_investObj, creType, cb) {
            var creditor_configTab = dc.main.get('creditor_config');
            creditor_configTab.findOne({id: "f207104d8dbe4f7488cd712cc672948b"}, {}, [], function (err, creditor_configObj) {
                if (err) {
                    console.log(err);
                }else {
                    cb(err , loanObj, creditor_configObj, investObj, creditor_investObj, creType);
                }

            });
        },
        function (loanObj, creditor_configObj, investObj, creditor_investObj, creType, cb) {
            if (creType == 1) {
                console.log("多次债权转让处理开始");
                bodyNode.creditor_invest_id = bodyNode.invest_id;
                bodyNode.invest_id = null;
                //多次债权转让处理
                creditorService.getCurRepayDay(loanObj.id, function (err, data) {
                    var curRepayDay = data.repay_day.Format("yyyy-MM-dd");
                    var curDay = new Date().Format("yyyy-MM-dd");

                    var investDay = creditor_investObj.create_time.Format("yyyy-MM-dd");
                    var inter_day = dateMathUtil.daysBetween(curDay, investDay);
                    console.log("持有债权的期限为：" + inter_day + "天");
                    var creDayCurRepay = dateMathUtil.daysBetween(curDay, curRepayDay);
                    console.log("转让申请距当期的还款日时间为：" + creDayCurRepay);
                    var minMoney = bodyNode.total_price;
                    console.log("债权转让的最低金额为：" + minMoney);
                    var discRange = bodyNode.disc_rate;
                    console.log("债权的折价率为：" + discRange);
                    var preRepayDay = creditorDateUtil.dayNumOfMonth(curRepayDay);
                    var money = bodyNode.total_price;
                    var period = data.period;
                    console.log("转让本金为：" + money);
                    var interest = data.interest;
                    if (err) {
                        cb(true);
                    }else {
                        creditorService.getMoreLastCreditor(creditor_investObj.id, function (err, data) {
                            if (err) {
                                cb(true);
                            }else {
                                console.log("多次债权的返回的值为：" + data);
                                if(data != null) {
                                    var lastCreditorDay = data.create_time.Format("yyyy-MM-dd");
                                    console.log("多次上笔的债权完成时间为：" + lastCreditorDay);
                                    var preCreditorDay = dateMathUtil.daysBetween(curDay, lastCreditorDay);
                                    console.log("进行债权的转让时间间隔的天数为2：" + preCreditorDay);
                                }
                                creditorService.getSurCount(loanObj.id, function (err,data) {
                                    var surCount = data.surCount;
                                    console.log("还款方式相应的剩余期数为：" + surCount);
                                    if (err) {
                                        cb(true);
                                    }else {
                                        creditorService.getSurMoney(loanObj.id, function (err,data) {
                                            console.log("剩余本金为：" + data);
                                            var surMoney = data;
                                            if (err) {
                                                console.log(err);
                                            }else {
                                                cb(null, loanObj, curRepayDay, curDay, preRepayDay, money, interest, period, creditor_configObj, surCount, surMoney);
                                            }
                                        });
                                    }
                                });
                            }
                        });
                    }
                });
            } else {
                creditorService.getCurRepayDay(loanObj.id, function (err, data) {
                    var preRepayDay = new Date();
                    var curRepayDay = data.repay_day.Format("yyyy-MM-dd");
                    var curDay = new Date().Format("yyyy-MM-dd");
                    console.log("*******************基本效验规则开始*************************");
                    //效验规则1
                    var investDay = investObj.create_time.Format("yyyy-MM-dd");
                    var inter_day = dateMathUtil.daysBetween(curDay, investDay);
                    console.log("持有债权的期限为：" + inter_day + "天");
                    //效验规则3
                    var creDayCurRepay = dateMathUtil.daysBetween(curDay, curRepayDay);
                    console.log("转让申请距当期的还款日时间为：" + creDayCurRepay);
                    //效验规则4
                    var minMoney = bodyNode.total_price;
                    console.log("债权转让的最低金额为：" + minMoney);
                    //效验规则5
                    var discRange = bodyNode.disc_rate;
                    console.log("债权的折价率为：" + discRange);
                    console.log("*******************基本效验规则结束*************************");
                    if (data.period == 1) {
                        console.log("标的第一期开始债转");
                        preRepayDay = loanObj.accrue_time.Format("yyyy-MM-dd");
                    }else {
                        preRepayDay = creditorDateUtil.dayNumOfMonth(curRepayDay);
                    }
                    var money = bodyNode.total_price;
                    var period = data.period;
                    console.log("转让债权本金为：" + money);
                    var interest = data.interest;
                    if (err) {
                        cb(true);
                    } else {
                        //效验规则2
                        creditorService.getLastCreditor(investObj.id, function (err, data) {
                            if (err) {
                                cb(true);
                            }else {
                                console.log("返回的值为：" + data);
                                if(data != null) {
                                    var lastCreditorDay = data.create_time.Format("yyyy-MM-dd");
                                    console.log("上笔的债权完成时间为：" + lastCreditorDay);
                                    var preCreditorDay = dateMathUtil.daysBetween(curDay, lastCreditorDay);
                                    console.log("进行债权的转让时间间隔的天数为2：" + preCreditorDay);
                                }
                                //计算剩余总数
                                creditorService.getSurCount(loanObj.id, function (err,data) {
                                    var surCount = data.surCount;
                                    console.log("还款方式相应的剩余期数为：" + surCount);
                                    if (err) {
                                        cb(true);
                                    }else {
                                        creditorService.getSurMoney(loanObj.id, function (err,data) {
                                            console.log("剩余本金为：" + data);
                                            var surMoney = data;
                                            if (err) {
                                                console.log(err);
                                            }else {
                                                cb(null, loanObj, curRepayDay, curDay, preRepayDay, money, interest, period, creditor_configObj, surCount, surMoney);
                                            }
                                        });
                                    }
                                });
                            }
                        });
                    }
                });
                //cb(null, loanObj);
            }
        },
        function (loanObj, curRepayDay, curDay, preRepayDay, money, interest, period, creditor_configObj, surCount, surMoney, cb) {
            var repay_typeTab = dc.main.get('repay_type');
            repay_typeTab.findOne({id: loanObj.repay_type}, {}, [], function (err, repay_typeObj) {
                switch (repay_typeObj.type) {
                    //等额本息
                    case 'debx':
                        console.log("等额本息剩余的总期数为：" + surCount);
                        var repayMonth = calculateService.deMonthSumCal(loanObj.rate/100, loanObj.money, loanObj.deadline);
                        console.log("每月的还款额为：--------------------------》" + repayMonth);
                        var creditorValue = creditorCalculateService.creditorValueDeMonth(curRepayDay, curDay, preRepayDay, money, interest);
                        //债权价值 - 折让金 = 实际应付
                        var actualMoney = creditorValue - money * bodyNode.disc_rate / 100 ;
                        console.log("剩余本金的金额为：" + surMoney);
                        var actualRate = creditorCalculateService.creditorActualRate(loanObj.money, loanObj.rate/100,repayMonth,period,money,actualMoney,surMoney)*100;
                        console.log("债权价值为：" + creditorValue);
                        console.log("实际利率为：" + actualRate);
                        bodyNode.actual_money_part = actualMoney / money;
                        console.log("实际应付的部分为：" + bodyNode.actual_money_part);
                        bodyNode.creditor_value = creditorValue;
                        bodyNode.actual_rate = actualRate;
                        bodyNode.loan_id = loanObj.id;
                        bodyNode.creditor_type = repay_typeObj.type;
                        var addDay = creditor_configObj.period;
                        console.log("债权的有效期为：" + addDay + "天");
                        //债权转让的时间
                        bodyNode.create_time = dateUtil.getCurTime();
                        var abc = new Date();
                        var abc1 = new Date();
                        bodyNode.start_time = abc;
                        bodyNode.end_time = dateMathUtil.daysAdd("d ", addDay, abc1);
                        cb(err);
                        break;
                    //先息后本
                    case 'ayfx':
                        var creditorValue = creditorCalculateService.creditorValueDeMonth(curRepayDay, curDay, preRepayDay, money, interest);
                        bodyNode.creditor_value = creditorValue;
                        var actualMoney = creditorValue - money * bodyNode.disc_rate / 100 ;
                        bodyNode.actual_money_part = actualMoney / money;
                        break;
                    //一次性还本付息
                    case 'ycxh':

                        break;
                    default:
                }
            })
        },
        //生成id号
        function (cb) {
            kvService.getLoanId(function (err, id) {
                if (err) {
                    log.error(headNode.messageid + '获取loanId出错');
                    cb(ec.E9999);
                } else {
                    cb(err, id);
                }
            });
        },
        function (id, cb) {
            console.log("id为：" + id);
            bodyNode.id = id;
            bodyNode.status = 0;
            console.log("creditor_value为：" + bodyNode.creditor_value);
            bodyNode.disc_price = bodyNode.total_price * bodyNode.disc_rate / 100;
            console.log("本次转让的折价金为：" + bodyNode.disc_price);
            var loan = dc.main.get('creditor_loan');
            loan.save(bodyNode, [], function (err) {
                if (err) {
                    cb(ec.E9050);
                } else {
                    cb(null);
                }
            });
        }
    ], function (err) {
        cb(err);
    });
};

/**
 * @param headNode
 * @param bodyNode
 * @type {CreditorControl}
 * @Description  CR02 购买债权
 */
CreditorControl.prototype.checkCR02 = function (headNode, bodyNode, cb) {
    cb(null);
};

CreditorControl.prototype.handleCR02 = function (headNode, bodyNode, cb) {
    var tasks = [
        function (cb) {
            var creditor_loanTab = dc.main.get('creditor_loan');
            creditor_loanTab.findOne({id: bodyNode.creditor_loan_id}, {}, [], function (err , creditorLoanObj) {
                cb(err , creditorLoanObj);
            });
        },
        function (creditorLoanObj, cb) {
            creditorService.getCurRepayDay(creditorLoanObj.loan_id, function (err, loanRepayObj) {
                if (err) {
                    cb(true);
                } else {
                    cb(err, creditorLoanObj, loanRepayObj);
                }
            });
        },
        function (creditorLoanObj, loanRepayObj, cb) {
            var investTab = dc.main.get('invest');
            var creditor_investTab = dc.main.get('creditor_invest');
            investTab.findOne({id: creditorLoanObj.invest_id}, {}, [], function (err, investObj) {
                console.log("债权的投资记录为：" + investObj);
                if (investObj != null) {
                    cb(err, creditorLoanObj, loanRepayObj, investObj);
                }else {
                    creditor_investTab.findOne({id: creditorLoanObj.creditor_invest_id}, {}, [], function (err, investObj) {
                        cb(err, creditorLoanObj, loanRepayObj, investObj);
                    });
                }
            });
        },
        //生成id号
        function (creditorLoanObj, loanRepayObj, investObj, cb) {
            kvService.getLoanId(function (err, id) {
                if (err) {
                    log.error(headNode.messageid + '获取loanId出错');
                    cb(ec.E9999);
                } else {
                    cb(err , creditorLoanObj, id, loanRepayObj, investObj);
                }
            });
        },
        function (creditorLoanObj, id, loanRepayObj, investObj, cb) {
            var loanTab = dc.main.get('loan');
            loanTab.findOne({id: creditorLoanObj.loan_id}, {}, [], function (err, loanObj) {
                cb(err , creditorLoanObj, id, loanRepayObj, investObj, loanObj);
            });
        },
        function (creditorLoanObj, id, loanRepayObj, investObj,loanObj, cb) {
            var curRepayDay = loanRepayObj.repay_day.Format("yyyy-MM-dd");
            var curDay = new Date().Format("yyyy-MM-dd");
            var preRepayDay = creditorDateUtil.dayNumOfMonth(curRepayDay);

            var creditor_configTab = dc.main.get('creditor_config');
            creditor_configTab.findOne({id: "f207104d8dbe4f7488cd712cc672948b"}, {}, [], function (err, creditor_configObj) {
                var creditor_mange_money = creditor_configObj.creditor_mange_money;
                var cre_inv_suc_man = bodyNode.money * creditor_mange_money / 100;
                if (err) {
                    console.log(err);
                }else {
                    cb(null, creditorLoanObj, id, loanRepayObj, investObj,loanObj,curRepayDay,curDay,preRepayDay,cre_inv_suc_man);
                }

            });
        },
        function (creditorLoanObj, id, loanRepayObj, investObj,loanObj,curRepayDay,curDay,preRepayDay,cre_inv_suc_man, cb) {
            creditorService.getSurMoney(loanObj.id, function (err,data) {
                console.log("剩余本金为：" + data);
                var surMoney = data;
                if (err) {
                    console.log(err);
                }else {
                    cb(null, creditorLoanObj, id, loanRepayObj, investObj,loanObj,curRepayDay,curDay,preRepayDay,cre_inv_suc_man,surMoney);
                }
            });
        },
        function (creditorLoanObj, id, loanRepayObj, investObj,loanObj,curRepayDay,curDay,preRepayDay,cre_inv_suc_man,surMoney, cb) {
            console.log("creditor_invest_id为：" + id);
            console.log("实际应付金额：" + bodyNode.accept_money);
            console.log("受让金额：" + bodyNode.money);
            console.log("更新金额：" + bodyNode.sur_money);
            console.log("债权投资成功的平台管理费为：" + cre_inv_suc_man);
            var accept_money = bodyNode.accept_money;
            var money = bodyNode.money;
            var userID = bodyNode.user_id;
            var sur_money = bodyNode.sur_money;
            var status = 1;
            var create_time = dateUtil.getCurTime();
            var creditor_loan_id = bodyNode.creditor_loan_id;
            //债权投资的债权价值
            var creditorValueInvest = creditorCalculateService.creditorValueDeMonth(curRepayDay, curDay, preRepayDay, money, loanRepayObj.interest);
            console.log("债权投资的债权价值为：" + creditorValueInvest);
            creditorService.buyTran(money, userID,accept_money,sur_money,id,status,create_time,creditor_loan_id,loanRepayObj,creditorLoanObj,investObj,loanObj,curRepayDay,curDay,preRepayDay,creditorValueInvest,cre_inv_suc_man,surMoney, function (err, data) {
                if(err) {
                    cb(ec.E9050);
                }else {
                    cb(null);
                }
            });
        }
    ];
    async.waterfall(tasks, function (err) {
        cb(err);
    });
};

var creditorControl = new CreditorControl();
module.exports = creditorControl;