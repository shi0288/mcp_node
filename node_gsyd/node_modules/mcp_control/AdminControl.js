var async = require('async');
var dc = require('mcp_db').dc;
var esut = require('easy_util');
var dateUtil = esut.dateUtil;
var log = esut.log;
var digestUtil = esut.digestUtil;

var cons = require('mcp_constants');
var userType = cons.userType;

var config = require('mcp_config');
var ec = config.ec;
var prop = config.prop;

var service = require('mcp_service');
var digestService = service.digestService;
var adminService = service.adminService;

var util = require('mcp_util');
var objectUtil = util.objectUtil;


var AdminControl = function () {
};

AdminControl.prototype.handle = function (headNode, bodyStr, userCb) {
    var self = this;
    async.waterfall([
        //是否是支持的cmd
        function (cb) {
            if (typeof self['handle' + headNode.cmd] === 'function') {
                cb(null);
            } else {
                cb(ec.E2010);
            }
        },
        //校验头的用户类型是否合法
        function (cb) {
            var userTypeId = userType[headNode.userType];
            if (userTypeId == undefined) {
                cb(ec.E9030);
            }
            else {
                cb(null, userTypeId);
            }
        },
        //获得密钥
        function (userTypeId, cb) {
            digestService.getKey({fromType: prop.digestFromType.DB, userId: headNode.userId, userType: userTypeId},
                function (err, key) {
                    cb(err, key);
                });
        },
        //先解密
        function (key, cb) {
            var decodedBodyStr = digestUtil.check(headNode, key, bodyStr);
            if (decodedBodyStr == null) {
                cb(ec.E9020);
                return;
            }
            var bodyNode;
            try {
                bodyNode = JSON.parse(decodedBodyStr);
                headNode.key = key;
            }
            catch (err) {
                cb(ec.E0005);
                return;
            }
            cb(null, bodyNode);
        },
        //check the param
        function (bodyNode, cb) {
            var method = 'check' + headNode.cmd;
            self[method](headNode, bodyNode, function (err) {
                cb(err, bodyNode);
            });
        },
        //业务处理
        function (bodyNode, cb) {
            var cmd = 'handle' + headNode.cmd;
            self[cmd](headNode, bodyNode, cb);
        }
    ], function (err, bodyNode) {
        userCb(err, bodyNode);
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  AD01 管理员登录
 */

AdminControl.prototype.checkAD01 = function (headNode, bodyNode, cb) {
    if (bodyNode.username == null || bodyNode.username == undefined) {
        cb(ec.E3070);
        return;
    }
    if (bodyNode.password == null || bodyNode.password == undefined) {
        cb(ec.E3070);
        return;
    }
    cb(null);
};

AdminControl.prototype.handleAD01 = function (headNode, bodyNode, cb) {
    adminService.login(bodyNode.username, bodyNode.password, function (err, tag) {
        if (err) {
            cb(ec.E9999);
        } else {
            var backNode = {};
            backNode.tag = tag;
            cb(null, backNode);
        }
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  AD02 根据用户获取菜单
 */

AdminControl.prototype.checkAD02 = function (headNode, bodyNode, cb) {
    cb(null);
};


AdminControl.prototype.handleAD02 = function (headNode, bodyNode, cb) {
    adminService.getMenu(bodyNode.username, function (err, menuArr) {
        if (err) {
            cb(ec.E9999);
        } else {
            var backNode = {};
            backNode.rst = menuArr;
            cb(null, backNode);
        }
    })
};

/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  AD03 获取所有目录树
 */

AdminControl.prototype.checkAD03 = function (headNode, bodyNode, cb) {
    cb(null);
};


AdminControl.prototype.handleAD03 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var sql = "select * from menu where type='" + bodyNode.type + "' order by seqnum";
    if (bodyNode.type == undefined) {
        sql = "select * from menu order by seqnum";
    }
    conn.execute(sql, [], function (err, allMenuArr) {
        if (err) {
            cb(ec.E9999);
        } else {
            adminService.getMenuTree(allMenuArr, null, null, function (err, tempArr) {
                if (err) {
                    cb(ec.E9999);
                } else {
                    var backNode = {};
                    backNode.rst = tempArr;
                    cb(null, backNode);
                }
            })
        }
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  AD04 删除菜单权限
 */

AdminControl.prototype.checkAD04 = function (headNode, bodyNode, cb) {
    if (bodyNode.role_id == null || bodyNode.role_id == undefined) {
        cb(ec.E3070);
        return;
    }
    if (bodyNode.menu_id == null || bodyNode.menu_id == undefined) {
        cb(ec.E3070);
        return;
    }
    cb(null);
};


AdminControl.prototype.handleAD04 = function (headNode, bodyNode, cb) {
    var table = dc.main.get('role_menu');
    table.remove({role_id: bodyNode.role_id, menu_id: bodyNode.menu_id}, [], function (err) {
        if (err) {
            log.error(headNode.messageid + '删除记录出错');
            cb(ec.E9999);
        } else {
            cb(null);
        }
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  AD05 获取所有目录树
 */

AdminControl.prototype.checkAD05 = function (headNode, bodyNode, cb) {
    cb(null);
};


AdminControl.prototype.handleAD05 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var sql = "select * from menu where type='" + bodyNode.type + "' and status=1 order by seqnum asc";
    conn.execute(sql, [], function (err, allMenuArr) {
        if (err) {
            cb(ec.E9999);
        } else {
            adminService.getMenuTree(allMenuArr, null, null, function (err, tempArr) {
                if (err) {
                    cb(ec.E9999);
                } else {
                    var backNode = {};
                    backNode.rst = tempArr;
                    cb(null, backNode);
                }
            })
        }
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  AD06 保存导入的日期
 */

AdminControl.prototype.checkAD06 = function (headNode, bodyNode, cb) {
    cb(null);
};


AdminControl.prototype.handleAD06 = function (headNode, bodyNode, cb) {
    var table = dc.main.get('local_date');
    async.eachSeries(bodyNode, function (yearObj, cbYear) {
        var year = yearObj.year;
        var months = yearObj.months;
        async.eachSeries(months, function (monthObj, cbMonth) {
            var month = monthObj.month;
            var days = monthObj.days;
            async.eachSeries(days, function (dayObj, cbday) {
                var day = dayObj.day;
                var week = dayObj.week;
                var status = dayObj.status;
                var id = year + '-' + month + '-' + day;
                id = dateUtil.transFormatToID(id);
                table.findOne({id: id}, {id: 1, status: 1}, [], function (err, data) {
                    if (data) {
                        if (data.status == status) {
                            cbday(null);
                        }else{
                            table.update({id: id}, {$set: {status: status}}, [], function (err) {
                                if (err) {
                                    cbday(ec.E9999);
                                } else {
                                    cbday(null);
                                }
                            });
                        }
                    }
                    else {
                        var obj = {id: id, year: year, month: month, day: day, week: week, status: status};
                        table.save(obj, [], function (err) {
                            if (err) {
                                cbday(ec.E9999);
                            } else {
                                cbday(null);
                            }
                        });
                    }
                });
            }, function (err) {
                cbMonth(err);
            })
        }, function (err) {
            cbYear(err);
        })
    }, function (err) {
        cb(err);
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  AD07 查询导入的日期
 */

AdminControl.prototype.checkAD07 = function (headNode, bodyNode, cb) {
    cb(null);
};


AdminControl.prototype.handleAD07 = function (headNode, bodyNode, cb) {
    var table = dc.main.get('local_date');
    bodyNode.fields = {id: 1, month: 1, day: 1, week: 1, status: 1};
    bodyNode.sort = {id: 1};
    var back = {year: bodyNode.cond.year};
    back.months = new Array();
    var backNode = {};
    backNode.entity = back;
    if (bodyNode.cond.month == undefined) {
        var condMonths = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
        async.eachSeries(condMonths, function (condMonth, callback) {
            bodyNode.cond.month = condMonth;
            var cursor = table.find(bodyNode.cond, bodyNode.fields, []).sort(bodyNode.sort).limit(0, 31);
            cursor.toArray(function (err, data) {
                if (err) {
                    log.error("获取列表出错");
                    callback(ec.E9999);
                } else {
                    var month = {month: bodyNode.cond.month};
                    month.days = data;
                    back.months.push(month);
                    callback(null);
                }
            });
        }, function (err) {
            cb(err, backNode);
        });
    } else {
        var cursor = table.find(bodyNode.cond, bodyNode.fields, []).sort(bodyNode.sort).limit(0, 31);
        cursor.toArray(function (err, data) {
            if (err) {
                log.error("获取列表出错");
                cb(ec.E9999);
                return;
            }
            var month = {month: bodyNode.cond.month};
            month.days = data;
            back.months.push(month);
            cb(null, backNode);
        });
    }
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  AD08 创建管理员
 */

AdminControl.prototype.checkAD08 = function (headNode, bodyNode, cb) {
    if (objectUtil.isNull(bodyNode.username)) {
        cb(ec.E3070);
        return;
    }
    if (objectUtil.isNull(bodyNode.password)) {
        cb(ec.E3070);
        return;
    }
    if (objectUtil.isNull(bodyNode.photo)) {
        cb(ec.E3070);
        return;
    }
    cb(null);
};

AdminControl.prototype.handleAD08 = function (headNode, bodyNode, cb) {
    var table = dc.main.get("user");
    bodyNode.status = 1;
    bodyNode.id = digestUtil.createUUID();
    bodyNode.permission = 1;
    bodyNode.password = digestUtil.sha1(bodyNode.password);
    bodyNode.createTime = new Date();
    table.save(bodyNode, [], function (err) {
        if (err) {
            log.error(bodyNode.username + '保存信息出错');
            cb(ec.E9999);
        } else {
            cb(null);
        }
    });
};





var adminControl = new AdminControl();
module.exports = adminControl;
