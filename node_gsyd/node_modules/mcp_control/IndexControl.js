var async = require('async');
var dc = require('mcp_db').dc;
var esut = require('easy_util');
var log = esut.log;
var digestUtil = esut.digestUtil;

var cons = require('mcp_constants');
var userType = cons.userType;

var config = require('mcp_config');
var ec = config.ec;
var prop = config.prop;

var service = require('mcp_service');
var digestService = service.digestService;
var checkService = service.checkService;
var userService = service.userService;

var IndexControl = function () {
};

IndexControl.prototype.handle = function (headNode, bodyStr, userCb) {
    var self = this;
    async.waterfall([
        //是否是支持的cmd
        function (cb) {
            if (typeof self['handle' + headNode.cmd] === 'function') {
                cb(null);
            } else {
                cb(ec.E2010);
            }
        },
        //校验头的用户类型是否合法
        function (cb) {
            var userTypeId = userType[headNode.userType];
            if (userTypeId == undefined) {
                cb(ec.E9030);
            }
            else {
                cb(null, userTypeId);
            }
        },
        //获得密钥
        function (userTypeId, cb) {
            digestService.getKey({fromType: prop.digestFromType.DB, userId: headNode.userId, userType: userTypeId},
                function (err, key) {
                    cb(err, key);
                });
        },
        //先解密
        function (key, cb) {
            var decodedBodyStr = digestUtil.check(headNode, key, bodyStr);
            if (decodedBodyStr == null) {
                cb(ec.E9020);
                return;
            }
            var bodyNode;
            try {
                bodyNode = JSON.parse(decodedBodyStr);
                headNode.key = key;
            }
            catch (err) {
                cb(ec.E0005);
                return;
            }
            cb(null, bodyNode);
        },
        //check the param
        function (bodyNode, cb) {
            var method = 'check' + headNode.cmd;
            self[method](headNode, bodyNode, function (err) {
                cb(err, bodyNode);
            });
        },
        //业务处理
        function (bodyNode, cb) {
            var cmd = 'handle' + headNode.cmd;
            self[cmd](headNode, bodyNode, cb);
        }
    ], function (err, bodyNode) {
        userCb(err, bodyNode);
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  IDC01 首页数据
 */

IndexControl.prototype.checkIDC01 = function (headNode, bodyNode, cb) {
    cb(null);
};


IndexControl.prototype.handleIDC01 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var backNode = {};
    var rst={};
    var sql = "select count(*) count from user where permission='0'";
    conn.execute(sql,[],function (err, one) {
        rst.userCount=one[0]["count"];
        sql = "select sum(interest) as  sum from loan_repay where status = 1";
        conn.execute(sql,[],function (err,two) {
            rst.zqsy=two[0]["sum"];
            sql = "SELECT sum(invest.money) as sum from invest LEFT JOIN loan on invest.loan_id=loan.id where loan.status>=1400 and invest.status=1200";
            conn.execute(sql, [], function (err, three) {
                rst.ljcjje=three[0]["sum"];
                backNode.entity=rst;
                cb(null,backNode);
            });
        });
    });
};

var indexControl = new IndexControl();
module.exports = indexControl;

