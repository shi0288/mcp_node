var async = require('async');
var dc = require('mcp_db').dc;
var esut = require('easy_util');
var log = esut.log;
var digestUtil = esut.digestUtil;
var dateUtil = esut.dateUtil;

var cons = require('mcp_constants');
var userType = cons.userType;
var investStatus = cons.investStatus;
var loanStatus = cons.loanStatus;
var userBillCons = cons.userBillCons;

var config = require('mcp_config');
var ec = config.ec;
var prop = config.prop;

var source = require('mcp_source');
var mqSource = source.mqSource;

var service = require('mcp_service');
var digestService = service.digestService;
var kvService = service.kvService;
var userBillService = service.userBillService;

var InvestControl = function () {
};

InvestControl.prototype.handle = function (headNode, bodyStr, userCb) {
    var self = this;
    async.waterfall([
        //是否是支持的cmd
        function (cb) {
            if (typeof self['handle' + headNode.cmd] === 'function') {
                cb(null);
            } else {
                cb(ec.E2010);
            }
        },
        //校验头的用户类型是否合法
        function (cb) {
            var userTypeId = userType[headNode.userType];
            if (userTypeId == undefined) {
                cb(ec.E9030);
            }
            else {
                cb(null, userTypeId);
            }
        },
        //获得密钥
        function (userTypeId, cb) {
            digestService.getKey({fromType: prop.digestFromType.DB, userId: headNode.userId, userType: userTypeId},
                function (err, key) {
                    cb(err, key);
                });
        },
        //先解密
        function (key, cb) {
            var decodedBodyStr = digestUtil.check(headNode, key, bodyStr);
            if (decodedBodyStr == null) {
                cb(ec.E9020);
                return;
            }
            var bodyNode;
            try {
                bodyNode = JSON.parse(decodedBodyStr);
                headNode.key = key;
            }
            catch (err) {
                cb(ec.E0005);
                return;
            }
            cb(null, bodyNode);
        },
        //check the param
        function (bodyNode, cb) {
            var method = 'check' + headNode.cmd;
            self[method](headNode, bodyNode, function (err) {
                cb(err, bodyNode);
            });
        },
        //业务处理
        function (bodyNode, cb) {
            var cmd = 'handle' + headNode.cmd;
            self[cmd](headNode, bodyNode, cb);
        }
    ], function (err, bodyNode) {
        userCb(err, bodyNode);
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  IC01 投资
 */

InvestControl.prototype.checkIC01 = function (headNode, bodyNode, cb) {
    var loanTab = dc.main.get('loan');
    loanTab.findOne({id: bodyNode.loan_id}, {
        status: 1,
        money: 1,
        loan_money: 1,
        rate: 1,
        st_rate: 1
    }, [], function (err, data) {
        if (data.status != loanStatus.raising) {
            cb(ec.E4010);
            return;
        }
        if (data.money - data.loan_money < bodyNode.money) {
            cb(ec.E4020);
            return;
        }
        bodyNode.rate = data.rate;
        if (data.st_rate > 0) {
            bodyNode.st_rate = data.st_rate;
        }
        bodyNode.channel = headNode.userId;
        cb(null);
    });
};

InvestControl.prototype.handleIC01 = function (headNode, bodyNode, cb) {
    async.waterfall([
        //生成id号
        function (cb) {
            kvService.getInvestId(function (err, id) {
                if (err) {
                    log.error(headNode.messageid + '获取InvestId出错');
                    cb(ec.E9999);
                } else {
                    cb(err, id);
                }
            });
        },
        //插入数据
        function (id, cb) {
            var investTab = dc.main.get('invest');
            bodyNode.create_time = new Date();
            bodyNode.status = investStatus.init;
            bodyNode.id = id;
            var userTab = dc.main.get('user');
            userTab.findOne({username: bodyNode.username}, {}, [], function (err, userObj) {
                delete bodyNode.username;
                bodyNode.user_id = userObj.id;
                investTab.save(bodyNode, [], function (err) {
                    if (err) {
                        cb(ec.E9050);
                    } else {
                        var backNode = {};
                        backNode.id = id;
                        cb(null, backNode);
                    }
                });
            });
        }
    ], function (err, backNode) {
        cb(err, backNode);
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  IC02 确认投资
 */

InvestControl.prototype.checkIC02 = function (headNode, bodyNode, cb) {
    cb(null);
};

InvestControl.prototype.handleIC02 = function (headNode, bodyNode, cb) {
    mqSource.send("server", bodyNode.id,JSON.stringify(bodyNode), function (err, data) {
        if (err) {
            log.error(err);
            cb(ec.E9999);
        } else {
            if (data) {
                if(data.rst=='2'){
                    cb(null);
                }else{
                    cb(ec.E4000);
                }
            } else {
                cb(ec.E4000);
            }
        }
    });
};


InvestControl.prototype.checkIC03 = function (headNode, bodyNode, cb) {
    cb(null);
};

InvestControl.prototype.handleIC03 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var sql = "SELECT ";
    var condition = "loan.name,invest.id,invest.create_time,invest.money," +
        "(select sum(invest_repay.money)+sum(invest_repay.interest)+sum(invest_repay.st_interest) " +
        "from  invest_repay where invest_repay.status=0 and invest.id=invest_repay.invest_id)   as sumWaitMoney  ";
    var whCondition = " from invest LEFT JOIN loan  on invest.loan_id=loan.id where invest.status=1200 and (loan.status=1400 or loan.status=1500 or loan.status=1600)  and invest.user_id='" + bodyNode.id + "'";
    var exSql = sql + condition + whCondition;
    exSql += '  order by invest.create_time desc';
    exSql += '  limit ' + bodyNode.skip;
    exSql += ',' + bodyNode.limit;
    conn.execute(exSql, [], function (err, data) {
        for (var key in data) {
            var set = data[key];
            set.create_time = dateUtil.toString(set.create_time);
        }
        var backNode = {};
        backNode.rst = data;
        var countSql = sql + " count(*)  as num " + whCondition;
        conn.execute(countSql, [], function (err, countData) {
            backNode.count = countData[0].num;
            cb(null, backNode)
        });
    });
};


InvestControl.prototype.checkIC04 = function (headNode, bodyNode, cb) {
    cb(null);
};

InvestControl.prototype.handleIC04 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var sql = "SELECT ";
    var condition = "loan.name,invest.id,invest.create_time,invest.money,invest.loan_id,invest.status";
    var whCondition = " from invest LEFT JOIN loan  on invest.loan_id=loan.id where invest.status=1200 and (loan.status=1200 or loan.status=1300)  and invest.user_id='" + bodyNode.id + "'";
    var exSql = sql + condition + whCondition;
    exSql += '  order by invest.create_time desc';
    exSql += '  limit ' + bodyNode.skip;
    exSql += ',' + bodyNode.limit;
    conn.execute(exSql, [], function (err, data) {
        for (var key in data) {
            var set = data[key];
            set.create_time = dateUtil.toString(set.create_time);
        }
        var backNode = {};
        backNode.rst = data;
        var countSql = sql + " count(*)  as num " + whCondition;
        conn.execute(countSql, [], function (err, countData) {
            backNode.count = countData[0].num;
            cb(null, backNode)
        });
    });
};

/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  IC05 已结清投资
 */
InvestControl.prototype.checkIC05 = function (headNode, bodyNode, cb) {
    cb(null);
};

InvestControl.prototype.handleIC05 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var sql = "SELECT ";
    var condition = "loan.name,invest.id,invest.create_time,invest.money,(SELECT sum(invest_repay.interest) + sum(invest_repay.st_interest) FROM invest_repay WHERE invest_repay. STATUS = 1 AND invest.id = invest_repay.invest_id ) AS sumaCcrualMoney";
    var whCondition = " FROM invest LEFT JOIN loan ON invest.loan_id = loan.id WHERE invest. STATUS = 1200 AND loan. STATUS = 2000 AND invest.user_id ='" + bodyNode.id + "'";
    var exSql = sql + condition + whCondition;
    exSql += '  order by invest.create_time desc';
    exSql += '  limit ' + bodyNode.skip;
    exSql += ',' + bodyNode.limit;
    conn.execute(exSql, [], function (err, data) {
        for (var key in data) {
            var set = data[key];
            set.create_time = dateUtil.toString(set.create_time);
        }
        var backNode = {};
        backNode.rst = data;
        var countSql = sql + " count(*)  as num " + whCondition;
        conn.execute(countSql, [], function (err, countData) {
            backNode.count = countData[0].num;
            cb(null, backNode)
        });
    });
};

/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  IC06 未成功投资
 */
InvestControl.prototype.checkIC06 = function (headNode, bodyNode, cb) {
    cb(null);
};

InvestControl.prototype.handleIC06 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var sql = "SELECT ";
    var condition = "	loan.name,invest.create_time,invest.money,loan.deadline,invest.status";
    var whCondition = " FROM invest LEFT JOIN loan ON invest.loan_id = loan.id WHERE invest.status = 1300 AND invest.user_id ='" + bodyNode.id + "'";
    var exSql = sql + condition + whCondition;
    exSql += '  order by invest.create_time desc';
    exSql += '  limit ' + bodyNode.skip;
    exSql += ',' + bodyNode.limit;
    conn.execute(exSql, [], function (err, data) {
        for (var key in data) {
            var set = data[key];
            set.create_time = dateUtil.toString(set.create_time);
        }
        var backNode = {};
        backNode.rst = data;
        var countSql = sql + " count(*)  as num " + whCondition;
        conn.execute(countSql, [], function (err, countData) {
            backNode.count = countData[0].num;
            cb(null, backNode)
        });
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  IC07 查询投资信息
 */
InvestControl.prototype.checkIC07 = function (headNode, bodyNode, cb) {
    cb(null);
};

InvestControl.prototype.handleIC07 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var sql = "SELECT ";
    var condition = "loan.name,loan.final_time,loan.accrue_time,invest.loan_id,loan.repay_type,invest.id,invest.create_time,invest.money,loan.rate,loan.deadline,loan.status";
    var whCondition = " from invest LEFT JOIN loan  on invest.loan_id=loan.id where invest.status=1200  and loan.status>=1200 and  invest.user_id='" + bodyNode.cond.userId + "'";
    var statusStr = "";
    if (bodyNode.cond.status != undefined && bodyNode.cond.status != null) {
        switch (bodyNode.cond.status) {
            case 1200:
                bodyNode.cond.status = '(loan.status=1200 or loan.status=1300)';
                break;
            case 1400:
                bodyNode.cond.status = '(loan.status=1400 or loan.status=1500)';
                break;
            default :
                bodyNode.cond.status = 'loan.status=' + bodyNode.cond.status;
        }
        statusStr = " and " + bodyNode.cond.status;
    }
    var loanTypeStr = "";
    if (bodyNode.cond.loanType != undefined && '' != bodyNode.cond.loanType) {
        loanTypeStr = " and loan.loan_type='" + bodyNode.cond.loanType + "'";
    }
    var loanNameStr = "";
    if (bodyNode.cond.name != undefined && '' != bodyNode.cond.name) {
        loanNameStr = " and loan.name='" + bodyNode.cond.name + "'";
    }

    var timeStr="";
    if(bodyNode.cond.minDate != undefined && '' != bodyNode.cond.minDate){
        timeStr=timeStr+" and invest.create_time>='"+bodyNode.cond.minDate+"'";
    }
    if(bodyNode.cond.maxDate != undefined && '' != bodyNode.cond.maxDate){
        timeStr=timeStr+" and invest.create_time<='"+bodyNode.cond.maxDate+"'";
    }
    var exSql = sql + condition + whCondition + statusStr + loanTypeStr + timeStr+loanNameStr;
    exSql += '  order by invest.create_time desc';
    exSql += '  limit ' + bodyNode.skip;
    exSql += ',' + bodyNode.limit;
    conn.execute(exSql, [], function (err, data) {
        for (var key in data) {
            var set = data[key];
            set.create_time = dateUtil.toString(set.create_time);
            set.final_time = dateUtil.toString(set.final_time);
            set.accrue_time = dateUtil.toString(set.accrue_time);
        }
        var backNode = {};
        backNode.rst = data;
        var countSql = sql + " count(*)  as num " + whCondition + statusStr + loanTypeStr + timeStr+loanNameStr;
        conn.execute(countSql, [], function (err, countData) {
            backNode.count = countData[0].num;
            cb(null, backNode)
        });
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  IC08 查询投资计划信息
 */
InvestControl.prototype.checkIC08 = function (headNode, bodyNode, cb) {
    cb(null);
};

InvestControl.prototype.handleIC08 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var sql = "select inre.*,lo.name,lo.status as loanStatus,lo.id as loan_id from invest_repay inre LEFT JOIN invest inv on inre.invest_id=inv.id LEFT JOIN loan lo on inv.loan_id=lo.id where 1 = 1 ";
    var countSql = "select count(inre.id) as num  from invest_repay inre LEFT JOIN invest inv on inre.invest_id=inv.id LEFT JOIN loan lo on inv.loan_id=lo.id where 1 = 1 ";
    var condition = '';
    if (bodyNode.userId != undefined && bodyNode.userId != null && bodyNode.userId != '') {
        condition += " and inv.user_id='" + bodyNode.userId + "'";
    }
    if (bodyNode.status != undefined && bodyNode.status != null) {

        condition += " and inre.status=" + bodyNode.status;
    }
    if (bodyNode.name != undefined && bodyNode.name != null && bodyNode.name != '') {
        condition += " and lo.name like '%" + bodyNode.name + "%'";
    }
    if(bodyNode.minDate != undefined && '' != bodyNode.minDate){
        condition +=" and inre.repay_day>='"+bodyNode.minDate+"'";
    }
    if(bodyNode.maxDate != undefined && '' != bodyNode.maxDate){
        condition +=" and inre.repay_day<='"+bodyNode.maxDate+"'";
    }

    sql += condition;
    sql += '  order by inre.repay_day asc';
    sql += '  limit ' + bodyNode.skip;
    sql += ',' + bodyNode.limit;
    conn.execute(sql, [], function (err, data) {
        for (var key in data) {
            var set = data[key];
            set.create_time = dateUtil.toString(set.create_time);
            set.repay_day = dateUtil.toString(set.repay_day);
        }
        var backNode = {};
        backNode.rst = data;
        countSql = countSql + condition;
        conn.execute(countSql, [], function (err, countData) {
            backNode.count = countData[0].num;
            cb(null, backNode)
        });
    });
};

/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  IC09 查询借款计划信息
 */
InvestControl.prototype.checkIC09 = function (headNode, bodyNode, cb) {
    cb(null);
};

InvestControl.prototype.handleIC09 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var sql = "SELECT lr.*,lo.name,lo.status as loanStatus from loan_repay lr LEFT JOIN loan lo on lr.loan_id=lo.id where 1=1 ";
    var countSql = "SELECT count(lr.id) as num from loan_repay lr LEFT JOIN loan lo on lr.loan_id=lo.id where 1=1 ";
    var condition = '';
    if (bodyNode.userId != undefined && bodyNode.userId != null && bodyNode.userId != '') {
        condition += " and lo.repay_user_id='" + bodyNode.userId + "'";
    }
    if (bodyNode.status != undefined && bodyNode.status != null) {

        condition += " and lr.status=" + bodyNode.status;
    }
    if (bodyNode.name != undefined && bodyNode.name != null && bodyNode.name != '') {
        condition += " and lo.name like '%" + bodyNode.name + "%'";
    }
    if(bodyNode.minDate != undefined && '' != bodyNode.minDate){
        condition +=" and lr.repay_day>='"+bodyNode.minDate+"'";
    }
    if(bodyNode.maxDate != undefined && '' != bodyNode.maxDate){
        condition +=" and lr.repay_day<='"+bodyNode.maxDate+"'";
    }
    sql += condition;
    sql += '  order by lr.repay_day asc';
    sql += '  limit ' + bodyNode.skip;
    sql += ',' + bodyNode.limit;
    conn.execute(sql, [], function (err, data) {
        for (var key in data) {
            var set = data[key];
            set.create_time = dateUtil.toString(set.create_time);
            set.repay_day = dateUtil.toString(set.repay_day);
        }
        var backNode = {};
        backNode.rst = data;
        countSql = countSql + condition;
        conn.execute(countSql, [], function (err, countData) {
            backNode.count = countData[0].num;
            cb(null, backNode)
        });
    });
};

/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  IC10 查询借款计划信息,增加借款人信息
 */
InvestControl.prototype.checkIC10 = function (headNode, bodyNode, cb) {
    cb(null);
};

InvestControl.prototype.handleIC10 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var sql = "select a.id,b.id as loanId,b.name as loanName,b.repay_type,b.loan_type,b.agreement,c.username as repayUsername,c.realname as repayRealname," +
        " d.username as borrowUsername,b.status as loanStatus,d.realname as borrowRealname,a.repay_day,a.period,a.all_period,b.accrue_time,b.money as loanMoney,b.rate,a.money,a.interest,a.advance_penalty,a.penalty,a.fee,a.st_interest,a.status" +
        " from loan_repay a LEFT JOIN loan b on a.loan_id=b.id LEFT JOIN user c on b.repay_user_id=c.id LEFT JOIN user d on b.borrow_user_id=d.id  where 1=1 ";
    var countSql = "select count(a.id) from loan_repay a LEFT JOIN loan b on a.loan_id=b.id LEFT JOIN user c on b.repay_user_id=c.id LEFT JOIN user d on b.borrow_user_id=d.id  where 1=1 ";
    var condition = '';
    if (bodyNode.userId != undefined && bodyNode.userId != null && bodyNode.userId != '') {
        condition += " and b.repay_user_id='" + bodyNode.userId + "'";
    }
    if (bodyNode.borrowUserId != undefined && bodyNode.borrowUserId != null && bodyNode.borrowUserId != '') {
        condition += " and b.borrow_user_id='" + bodyNode.borrowUserId + "'";
    }
    if (bodyNode.status != undefined && bodyNode.status != null) {

        condition += " and b.status=" + bodyNode.status;
    }
    if(bodyNode.minDate != undefined && '' != bodyNode.minDate){
        condition +=" and a.repay_day>='"+bodyNode.minDate+"'";
    }
    if(bodyNode.maxDate != undefined && '' != bodyNode.maxDate){
        condition +=" and a.repay_day<='"+bodyNode.maxDate+"'";
    }
    sql += condition;
    sql += '  order by a.repay_day asc';
    sql += '  limit ' + bodyNode.skip;
    sql += ',' + bodyNode.limit;
    conn.execute(sql, [], function (err, data) {
        for (var key in data) {
            var set = data[key];
            set.create_time = dateUtil.toString(set.create_time);
            set.repay_day = dateUtil.toString(set.repay_day);
            set.accrue_time = dateUtil.toString(set.accrue_time);
        }
        var backNode = {};
        backNode.rst = data;
        countSql = countSql + condition;
        conn.execute(countSql, [], function (err, countData) {
            backNode.count = countData[0].num;
            cb(null, backNode)
        });
    });
};



/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  IC11 撤销投资
 */
InvestControl.prototype.checkIC11 = function (headNode, bodyNode, cb) {
    cb(null);
};

InvestControl.prototype.handleIC11 = function (headNode, bodyNode, cb) {
    var investTab = dc.main.get('invest');
    investTab.findOne({id: bodyNode.id}, {}, [], function (err, investObj) {
        if (investObj) {
            var des = "出借：" + investObj.id + "流标，解冻金额:" + investObj.money / 100;
            //账户操作
            userBillService.thawMoney(investObj.user_id,
                investObj.money,
                userBillCons.payType.CANCEL_INVEST,
                des, function (err) {
                    cb(null);
                });
        }
        else {
            cb(ec.E3060);
        }
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  IC12 查询收益
 */
InvestControl.prototype.checkIC12 = function (headNode, bodyNode, cb) {
    cb(null);
};

InvestControl.prototype.handleIC12 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var sql = "select sum(ire.interest+IFNULL(ire.st_interest,0)+IFNULL(ire.advance_penalty,0)+IFNULL(ire.fee+ire.penalty,0)) as amount  from " +
        "invest_repay ire LEFT JOIN invest inv on ire.invest_id=inv.id  " +
        "where ire.status=1";

    var condition = '';
    if (bodyNode.user_id != undefined && bodyNode.user_id != null && bodyNode.user_id != '') {
        condition += " and inv.user_id='" + bodyNode.user_id + "'";
    }
    console.log(bodyNode.user_id+"_________________________________");
    if(bodyNode.minDate != undefined && '' != bodyNode.minDate){
        condition +=" and ire.repay_day>='"+bodyNode.minDate+"'";
    }
    if(bodyNode.maxDate != undefined && '' != bodyNode.maxDate){
        condition +=" and ire.repay_day<='"+bodyNode.maxDate+"'";
    }
    if(bodyNode.date != undefined && '' != bodyNode.date){
        condition +=" and ire.repay_day>='"+bodyNode.date+" 00:00:00'";
        condition +=" and ire.repay_day<='"+bodyNode.date+" 23:59:59'";
    }
    sql += condition;
    conn.execute(sql, [], function (err, data) {
        var backNode = {};
        if(data[0].amount){
            backNode.count = data[0].amount;
        }else{
            backNode.count = 0;
        }
        cb(null, backNode);
    });
};



/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  IC13 查询借款计划信息,增加借款人信息
 */
InvestControl.prototype.checkIC13 = function (headNode, bodyNode, cb) {
    cb(null);
};

InvestControl.prototype.handleIC13 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var sql = "SELECT inv.user_id,inv.money,inv.create_time from invest inv LEFT JOIN loan lo on inv.loan_id =lo.id where inv.status=1200 and lo.status>=1400";
    var countSql = "SELECT count(inv.id) as num from invest inv LEFT JOIN loan lo on inv.loan_id =lo.id where inv.status=1200 and lo.status>=1400";
    var condition = '';
    if (bodyNode.username != undefined && bodyNode.username != null && bodyNode.username != '') {
        condition += " and inv.user_id in (SELECT id from user where referrer='"+bodyNode.username+"')";
    }
    if (bodyNode.user_id != undefined && bodyNode.user_id != null && bodyNode.user_id != '') {
        condition += " and inv.user_id ='"+bodyNode.user_id+"'";
    }
    if(bodyNode.minDate != undefined && '' != bodyNode.minDate){
        condition +=" and inv.create_time>='"+bodyNode.minDate+"'";
    }
    if(bodyNode.maxDate != undefined && '' != bodyNode.maxDate){
        condition +=" and inv.create_time<='"+bodyNode.maxDate+"'";
    }
    sql += condition;
    sql += '  order by inv.create_time desc';
    sql += '  limit ' + bodyNode.skip;
    sql += ',' + bodyNode.limit;
    conn.execute(sql, [], function (err, data) {
        for (var key in data) {
            var set = data[key];
            set.create_time = dateUtil.toString(set.create_time);
        }
        var backNode = {};
        backNode.rst = data;
        countSql = countSql + condition;
        conn.execute(countSql, [], function (err, countData) {
            backNode.count = countData[0].num;
            cb(null, backNode)
        });
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  IC14 获取标的投资人信息
 */
InvestControl.prototype.checkIC14 = function (headNode, bodyNode, cb) {
    cb(null);
};

InvestControl.prototype.handleIC14 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var sql = "SELECT invest.money,invest.create_time,CONCAT(left(user.username ,1),'***',right(user.username,1)) as username  from invest LEFT JOIN user on invest.user_id=user.id where 1=1 ";
    var countSql = "SELECT count(invest.id) as num from invest LEFT JOIN user on invest.user_id=user.id where 1=1 ";
    var condition = '';
    if (bodyNode.status != undefined && bodyNode.status != null && bodyNode.status != '') {
        condition += " and invest.status ='"+bodyNode.status+"'";
    }
    if (bodyNode.loan_id != undefined && bodyNode.loan_id != null && bodyNode.loan_id != '') {
        condition += " and invest.loan_id ='"+bodyNode.loan_id+"'";
    }
    sql += condition;
    sql += '  order by invest.create_time desc';

    conn.execute(sql, [], function (err, data) {
        for (var key in data) {
            var set = data[key];
            set.create_time = dateUtil.toString(set.create_time);
        }
        var backNode = {};
        backNode.rst = data;
        countSql = countSql + condition;
        conn.execute(countSql, [], function (err, countData) {
            backNode.count = countData[0].num;
            cb(null, backNode)
        });
    });
};


var investControl = new InvestControl();
module.exports = investControl;