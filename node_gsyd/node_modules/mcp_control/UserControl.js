/**
 * Created by shiqm on 16-4-8.
 */
'use strict';
var async = require('async');
var dc = require('mcp_db').dc;
var esut = require('easy_util');
var digestUtil = esut.digestUtil;
var log = esut.log;
var moment=require('moment');

var cons = require('mcp_constants');
var userType = cons.userType;

var config = require('mcp_config');
var ec = config.ec;
var prop = config.prop;

var service = require('mcp_service');
var digestService = service.digestService;
var adminService = service.adminService;

var util = require('mcp_util');
var objectUtil = util.objectUtil;

var UserControl = function () {
};


UserControl.prototype.handle = function (headNode, bodyStr, userCb) {
    var self = this;
    async.waterfall([
        //是否是支持的cmd
        function (cb) {
            if (typeof self['handle' + headNode.cmd] === 'function') {
                cb(null);
            } else {
                cb(ec.E2010);
            }
        },
        //校验头的用户类型是否合法
        function (cb) {
            var userTypeId = userType[headNode.userType];
            if (userTypeId == undefined) {
                cb(ec.E9030);
            }
            else {
                cb(null, userTypeId);
            }
        },
        //获得密钥
        function (userTypeId, cb) {
            digestService.getKey({fromType: prop.digestFromType.DB, userId: headNode.userId, userType: userTypeId},
                function (err, key) {
                    cb(err, key);
                });
        },
        //先解密
        function (key, cb) {
            var decodedBodyStr = digestUtil.check(headNode, key, bodyStr);
            if (decodedBodyStr == null) {
                cb(ec.E9020);
                return;
            }
            var bodyNode;
            try {
                bodyNode = JSON.parse(decodedBodyStr);
                headNode.key = key;
            }
            catch (err) {
                cb(ec.E0005);
                return;
            }
            cb(null, bodyNode);

        },
        //check the param
        function (bodyNode, cb) {
            var method = 'check' + headNode.cmd;
            self[method](headNode, bodyNode, function (err) {
                cb(err, bodyNode);
            });
        },
        //业务处理
        function (bodyNode, cb) {
            var cmd = 'handle' + headNode.cmd;
            self[cmd](headNode, bodyNode, cb);
        }
    ], function (err, bodyNode) {
        userCb(err, bodyNode);
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  UC01 注册
 */

UserControl.prototype.checkUC01 = function (headNode, bodyNode, cb) {
    if (objectUtil.isNull(bodyNode.username)) {
        cb(ec.E3070);
        return;
    }
    if (objectUtil.isNull(bodyNode.password)) {
        cb(ec.E3070);
        return;
    }
    if (objectUtil.isNull(bodyNode.mobile)) {
        cb(ec.E3070);
        return;
    }
    cb(null);
};

UserControl.prototype.handleUC01 = function (headNode, bodyNode, cb) {
    var table = dc.main.get("user");
    var cursor = table.find({username:bodyNode.username}, {}, []).sort(bodyNode.sort).limit(bodyNode.skip, bodyNode.limit);
    cursor.count(function (err, count) {
        if(count==0){
            bodyNode.status = 1;
            bodyNode.id = digestUtil.createUUID();
            bodyNode.permission = 0;
            bodyNode.password = digestUtil.sha1(bodyNode.password);
            bodyNode.createTime = new Date();
            table.save(bodyNode, [], function (err) {
                if (err) {
                    log.error(bodyNode.username + '保存信息出错');
                    cb(ec.E9999);
                } else {
                    //创建账户
                    var accountTab = dc.main.get("account");
                    var cond = {
                        id: digestUtil.createUUID(),
                        user_id: bodyNode.id,
                        money: 0,
                        frozen_money: 0,
                        create_time: new Date(),
                        update_time: new Date()
                    };
                    accountTab.save(cond, [], function (err) {
                        if (err) {
                            log.error(bodyNode.username + '创建账户出错');
                            cb(ec.E9999);
                        } else {
                            cb(null);
                        }
                    });
                }
            });
        }else{
            cb(ec.E3090);
        }
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  UC02 登录
 */

UserControl.prototype.checkUC02 = function (headNode, bodyNode, cb) {
    if (bodyNode.username == null || bodyNode.username == undefined) {
        cb(ec.E3070);
        return;
    }
    if (bodyNode.password == null || bodyNode.password == undefined) {
        cb(ec.E3070);
        return;
    }
    cb(null);
};

UserControl.prototype.handleUC02 = function (headNode, bodyNode, cb) {
    adminService.userLogin(bodyNode.username, bodyNode.password, function (err, tag) {
        if (err) {
            cb(ec.E9999);
        } else {
            var backNode = {};
            backNode.tag = tag;
            cb(null, backNode);
        }
    });
};

/**
 * 客户信息抓取
 * @param headNode
 * @param bodyNode
 * @param cb
 */
UserControl.prototype.checkUC03 = function (headNode, bodyNode, cb) {
    if (bodyNode.beginTime == null || bodyNode.beginTime == undefined) {
        cb(ec.E3070);
        return;
    }
    if (bodyNode.endTime == null || bodyNode.endTime == undefined) {
        cb(ec.E3070);
        return;
    }
    cb(null);
};

UserControl.prototype.handleUC03 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    var beginTime = bodyNode.beginTime;
    var endTime = bodyNode.endTime;
    var sql = "select id,username,mobile,createTime from user where createTime >='" + beginTime + "' and createTime <='" + endTime + "'";
    conn.execute(sql, [], function (err, data) {
        if (err) {
            cb(ec.E9999);
        } else {
            var backNode = {};
            backNode.rst = data;
            cb(backNode);
        }
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  UC04 登录
 */

UserControl.prototype.checkUC04 = function (headNode, bodyNode, cb) {
    if (bodyNode.mobile == null || bodyNode.mobile == undefined) {
        cb(ec.E3070);
        return;
    }
    if (bodyNode.password == null || bodyNode.password == undefined) {
        cb(ec.E3070);
        return;
    }
    cb(null);
};

UserControl.prototype.handleUC04 = function (headNode, bodyNode, cb) {
    adminService.userLoginByMobile(bodyNode.mobile, bodyNode.password, function (err, tag) {
        if (err) {
            cb(ec.E9999);
        } else {
            var backNode = {};
            backNode.tag = tag;
            cb(null, backNode);
        }
    })
};


/**
 * 获取推荐人数,出借人数，出借总额
 * @param headNode
 * @param bodyNode
 * @param cb
 */

UserControl.prototype.checkUC05 = function (headNode, bodyNode, cb) {
    if (bodyNode.username == null || bodyNode.username == undefined) {
        cb(ec.E3070);
        return;
    }
    cb(null);
};

UserControl.prototype.handleUC05 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    //推荐人数
    var refreeNumSql = "select count(id) as refreeNum from user where referrer='" + bodyNode.username + "'";
    var backNode = {};
    conn.execute(refreeNumSql, [], function (err, refreeData) {
        backNode.entity = {};
        if (refreeData[0].refreeNum && refreeData[0].refreeNum > 0) {
            backNode.entity.refreeNum = refreeData[0].refreeNum;
            //如果有被推荐人，继续查询是否有投资
            var loanerNumSql = "select count(*) as loanerNum from (select inv.user_id as loanerNum from invest inv LEFT JOIN loan lo on inv.loan_id=lo.id where inv.user_id in(select id from user where referrer='" + bodyNode.username + "') and inv.status=1200 and lo.status>=1400  GROUP BY inv.user_id) as coTab ";
            conn.execute(loanerNumSql, [], function (err, loanerData) {
                if (loanerData[0].loanerNum && loanerData[0].loanerNum > 0) {
                    //如果有借款人，继续查询投资金额
                    backNode.entity.loanerNum = loanerData[0].loanerNum;
                    var loanerMoneySql = "select sum(inv.money) as loanerMoney from invest inv LEFT JOIN loan lo on inv.loan_id=lo.id where inv.user_id in(select id from user where referrer='" + bodyNode.username + "') and inv.status=1200 and lo.status>=1400";
                    conn.execute(loanerMoneySql, [], function (err, loanerMoneyData) {
                        if (loanerMoneyData[0].loanerMoney && loanerMoneyData[0].loanerMoney > 0) {
                            backNode.entity.loanerMoney = loanerMoneyData[0].loanerMoney;
                            cb(null, backNode);
                        } else {
                            backNode.entity.loanerMoney = 0;
                            cb(null, backNode);
                        }
                    })
                } else {
                    backNode.entity.loanerNum = 0;
                    cb(null, backNode);
                }
            })
        } else {
            backNode.entity.refreeNum = 0;
            cb(null, backNode);
        }
    });
};

/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  UC06 修改密码
 */

UserControl.prototype.checkUC06 = function (headNode, bodyNode, cb) {
    if (objectUtil.isNull(bodyNode.user_id)) {
        cb(ec.E3070);
        return;
    }
    if (objectUtil.isNull(bodyNode.password)) {
        cb(ec.E3070);
        return;
    }
    cb(null);
};

UserControl.prototype.handleUC06 = function (headNode, bodyNode, cb) {
    var table = dc.main.get("user");
    bodyNode.password = digestUtil.sha1(bodyNode.password);
    table.update({id: bodyNode.user_id}, {$set: {password: bodyNode.password}}, [], function (err) {
        if (err) {
            log.error(headNode.messageid + '更新记录出错');
            cb(ec.E9999);
        } else {
            cb(null);
        }
    });

};

/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  UC07 行销人员登录
 */

UserControl.prototype.checkUC07 = function (headNode, bodyNode, cb) {
    if (bodyNode.username == null || bodyNode.username == undefined) {
        cb(ec.E3070);
        return;
    }
    if (bodyNode.password == null || bodyNode.password == undefined) {
        cb(ec.E3070);
        return;
    }
    cb(null);
};

UserControl.prototype.handleUC07 = function (headNode, bodyNode, cb) {
    adminService.marketLogin(bodyNode.username, bodyNode.password, function (err, tag) {
        if (err) {
            cb(ec.E9999);
        } else {
            var backNode = {};
            backNode.tag = tag;
            cb(null, backNode);
        }
    });
};

/**
 * 获取推荐列表
 * @param headNode
 * @param bodyNode
 * @param cb
 */

UserControl.prototype.checkUC07 = function (headNode, bodyNode, cb) {
    if (bodyNode.username == null || bodyNode.username == undefined) {
        cb(ec.E3070);
        return;
    }
    cb(null);
};

UserControl.prototype.handleUC07 = function (headNode, bodyNode, cb) {
    var conn = dc.main.getConn();
    //推荐人数
    var backNode = {};
    var loanerMoneySql = "select sum(inv.money) as loanerMoney from invest inv LEFT JOIN loan lo on inv.loan_id=lo.id where inv.user_id in(select id from user where referrer='" + bodyNode.username + "') and inv.status=1200 and lo.status>=1400";
    conn.execute(loanerMoneySql, [], function (err, loanerMoneyData) {
        if (loanerMoneyData[0].loanerMoney && loanerMoneyData[0].loanerMoney > 0) {
            backNode.entity.loanerMoney = loanerMoneyData[0].loanerMoney;
            cb(null, backNode);
        } else {
            backNode.entity.loanerMoney = 0;
            cb(null, backNode);
        }
    })
};


/**
 * 后台获取推荐列表
 * @param headNode
 * @param bodyNode
 * @param cb
 */

UserControl.prototype.checkUC08 = function (headNode, bodyNode, cb) {
    cb(null);
};

UserControl.prototype.handleUC08 = function (headNode, bodyNode, cb) {
    var sql = "SELECT a.id,a.username,a.realname,a.mobile," +
        "b.username as refUsername,b.realname as refRealname,b.mobile as refMobile," +
        "d.id as loanId,d.name as loanName,c.create_time,c.money,d.status,c.status as investStatus  " +
        "from user a LEFT JOIN user b on a.username=b.referrer " +
        "LEFT JOIN invest c on b.id=c.user_id  " +
        "LEFT JOIN loan d on  c.loan_id=d.id  " +
        "where b.username is not null and (d.status>=1200 or d.status is null)  and a.permission=0 and b.permission=0 ";
    var countSql = "SELECT  count(a.id) as count " +
        "from user a LEFT JOIN user b on a.username=b.referrer " +
        "LEFT JOIN invest c on b.id=c.user_id  " +
        "LEFT JOIN loan d on  c.loan_id=d.id  " +
        "where b.username is not null and (d.status>=1200 or d.status is null)  and a.permission=0 and b.permission=0 ";
    var condiStr = '';
    if (bodyNode.cond.username != undefined && bodyNode.cond.username !='') {
        if (bodyNode.cond.role != undefined && bodyNode.cond.role == 0) {
            condiStr += " and a.username='" + bodyNode.cond.username + "'";
        } else if (bodyNode.cond.role != undefined && bodyNode.cond.role == 1) {
            condiStr += " and b.username='" + bodyNode.cond.username + "'";
        } else {
            condiStr += " and (a.username='" + bodyNode.cond.username + "' or b.username='" + bodyNode.cond.username + "')";
        }
    }
    if (bodyNode.cond.mobile != undefined && bodyNode.cond.mobile !='') {
        if (bodyNode.cond.role != undefined && bodyNode.cond.role == 0) {
            condiStr += " and a.mobile='" + bodyNode.cond.mobile + "'";
        } else if (bodyNode.role != undefined && bodyNode.role == 1) {
            condiStr += " and b.mobile='" + bodyNode.cond.mobile + "'";
        } else {
            condiStr += " and (a.mobile='" + bodyNode.cond.mobile + "' or b.mobile='" + bodyNode.cond.mobile + "')";
        }
    }
    if (bodyNode.cond.start != undefined && bodyNode.cond.start !='') {
        condiStr += " and c.create_time>='" + bodyNode.cond.start + "'";
    }
    if (bodyNode.cond.end != undefined && bodyNode.cond.end !='') {
        condiStr += " and c.create_time<='" + bodyNode.cond.end + "'";
    }
    console.log(bodyNode.cond);
    if (bodyNode.cond.trail != undefined) {
        if (bodyNode.cond.trail == 0) {
            condiStr += " and b.authentication=1";
        } else if (bodyNode.cond.trail == 1) {
            condiStr += " and b.authentication is null";
        }
    }

    if (bodyNode.cond.investStatus != undefined) {
        if (bodyNode.cond.investStatus == 1000) {
            condiStr += " and c.status is null";
        } else if (bodyNode.cond.investStatus == 1100) {
            condiStr += " and c.status=1100";
        } else if (bodyNode.cond.investStatus == 1200) {
            condiStr += " and c.status=1200";
        } else if (bodyNode.cond.investStatus == 1300) {
            condiStr += " and c.status=1300";
        }
    } else {
        condiStr += " and (c.status=1200 or c.status is null or c.status=1100 or c.status=1300)";
    }

    if (bodyNode.cond.loanStatus != undefined && bodyNode.cond.loanStatus !='') {
        condiStr += " and d.status='" + bodyNode.cond.loanStatus + "'";
    }

    if (condiStr != null && condiStr != undefined && condiStr != '') {
        sql += condiStr;
        countSql += condiStr;
    }
    sql += " order by c.create_time desc limit " + bodyNode.skip + ',' + bodyNode.limit;
    var conn = dc.main.getConn();
    console.log(sql);
    conn.execute(sql, [], function (err, data) {
        if (err) {
            cb(err, null);
        } else {
            var backBodyNode = {};
            for (var key in data) {
                data[key]['create_time'] = moment(data[key]['create_time']).format("YYYY-MM-DD HH:mm:ss");
            }
            backBodyNode.rst = data;
            conn.execute(countSql, [], function (err, data) {
                backBodyNode.count = data[0].count;
                cb(null, backBodyNode);
            });
        }
    });
};


var userControl = new UserControl();
module.exports = userControl;