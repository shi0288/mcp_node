/**
 * Created by shiqm on 16-4-11.
 */
'use strict';
var dc = require('mcp_db').dc;
var CronJob = require('cron').CronJob;
var async = require('async');
var esut = require('easy_util');
var log = esut.log;

var cons = require('mcp_constants');
var taskCons = cons.taskCons;
var loanStatus = cons.loanStatus;

var engine = require('mcp_engine');
var ycxhEngine = engine.ycxhEngine;
var ayfxEngine = engine.ayfxEngine;
var debxEngine = engine.debxEngine;
var ycxhOutEngine = engine.ycxhOutEngine;
var ayfxOutEngine = engine.ayfxOutEngine;
var debxOutEngine = engine.debxOutEngine;

var LoanTask = function () {
};


LoanTask.prototype.run = function () {
    var self = this;
    self.checkRaiseTime.start();
    self.calculateRepayPlan.start();
    log.info("定时任务处理已启动");
};


/**
 * 检查项目募集时间到期
 */
LoanTask.prototype.checkRaiseTime = new CronJob('*/10 * * * * *', function () {
    var task = dc.mg.get('task');
    task.findAndRemove({
        fireTime: {$lte: new Date().getTime(), $exists: true},
        type: taskCons['recheck']
    }, {}, [], function (err, data) {
        if (data == null) {
        } else {
            var loanTab = dc.main.get('loan');
            loanTab.findOne({id: data.loan_id}, {status: 1}, [], function (err, findLoan) {
                if (err) {
                    log.error("出错:定时任务查找项目信息出错:" + data.loan_id);
                } else {
                    if (findLoan == undefined) {
                        log.error("出错:定时任务没有查找到项目信息:" + data.loan_id);
                        return;
                    }
                    if (findLoan.status == loanStatus.raising) {
                        loanTab.update({id: data.loan_id}, {$set: {status: loanStatus.recheck}}, [], function (err, rst) {
                            if (err) {
                                log.error("出错:定时任务更改项目状态:" + data.loan_id);
                            } else {
                                log.info("定时任务更改项目状态:" + data.loan_id);
                            }
                        })
                    } else {
                        log.error("已经通过满标修改状态:定时任务不再更改:" + data.loan_id);
                    }
                }
            });
        }
    });
}, null, false);

/**
 * 生成还款计划
 */
LoanTask.prototype.calculateRepayPlan = new CronJob('*/10 * * * * *', function () {
    var task = dc.mg.get('task');
    task.findAndRemove({
        fireTime: {$lte: new Date().getTime(), $exists: true},
        type: taskCons['calculate']
    }, {}, [], function (err, data) {
        if (data == null) {
        } else {
            var loanTab = dc.main.get('loan');
            loanTab.findOne({id: data.loan_id}, {}, [], function (err, findLoan) {
                if (err) {
                    log.error("出错:定时任务生成还款计划出错:" + data.loan_id);
                } else {
                    if (findLoan == undefined) {
                        log.error("出错:定时任务生成还款计划没有查找到项目信息:" + data.loan_id);
                        return;
                    }
                    if (findLoan.status == loanStatus.repaying) {
                        var repay_typeTab = dc.main.get('repay_type');
                        repay_typeTab.findOne({id: findLoan.repay_type}, {}, [], function (err, repay_typeObj) {
                            switch (repay_typeObj.type) {
                                //一次性还本付息
                                case 'ycxh':
                                    ycxhEngine.start(findLoan, repay_typeObj, function (err) {
                                        console.log(err);
                                    });
                                    break;
                                //按月付息
                                case 'ayfx':
                                    ayfxEngine.start(findLoan, repay_typeObj, function (err) {
                                        console.log(err);
                                    });
                                    break;
                                //等额本息
                                case 'debx':
                                    debxEngine.start(findLoan, repay_typeObj, function (err) {
                                        console.log(err);
                                    });
                                    break;
                                //线下一次性还本付息
                                case 'out_ycxh':
                                    ycxhOutEngine.start(findLoan, repay_typeObj, function (err) {
                                        console.log(err);
                                    });
                                    break;
                                //线下按月付息，到期换本
                                case 'out_ayfx':
                                    ayfxOutEngine.start(findLoan, repay_typeObj, function (err) {
                                        console.log(err);
                                    });
                                    break;
                                //线下等额本息
                                case 'out_debx':
                                    debxOutEngine.start(findLoan, repay_typeObj, function (err) {
                                        console.log(err);
                                    });
                                    break;
                                default:
                            }
                        });
                    } else {
                        log.error("已经通过满标修改状态:定时任务不再更改:" + data.loan_id);
                    }
                }
            });
        }
    });
}, null, false);


var loanTask = new LoanTask();
module.exports = loanTask;