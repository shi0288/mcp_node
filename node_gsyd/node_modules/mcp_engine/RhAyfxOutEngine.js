/**
 * Created by shiqm on 16-4-22.
 */
'use strict';

var async = require('async');
var service = require('mcp_service');
var calculateService = service.calculateService;
var moment = require('moment');
var cons = require('mcp_constants');
var calCons = cons.calculateCons;
var investCons = cons.investStatus;

var esut = require('easy_util');
var dateUtil = esut.dateUtil;

var util = require('mcp_util');
var dateMathUtil = util.dateMathUtil;

var dc = require('mcp_db').dc;


var RhAyfxOutEngine = function () {
    var self = this;
};


/**
 * point 0  放款后升息
 * point 1  即投即生息
 * @param loanObj
 * @param repayTypeObj
 * @param cb
 */
RhAyfxOutEngine.prototype.start = function (loanObj, repayTypeObj, cb) {
    var self = this;
    if (repayTypeObj.point == 0) {
        self.ptx(loanObj, repayTypeObj, false, cb);
    } else if (repayTypeObj.point == 1) {
        self.ptx(loanObj, repayTypeObj, true, cb);
    } else {
        cb('不支持的计息节点');
    }
};


/**
 * 借款人利息给最后
 * @param loanObj
 * @param repayTypeObj
 * @param jt
 * @param cb
 */
RhAyfxOutEngine.prototype.ptx = function (loanObj, repayTypeObj, jt, cb) {
    var investTab = dc.main.get('invest');
    var cursor = investTab.find({loan_id: loanObj.id, status: investCons.bid_success}, {}, []).sort({create_time: 1});
    cursor.dateToString();
    cursor.count(function (err, count) {
        var sumInvestNumber = count;
        var startNum = 0;
        var i = 0;
        //正在处理的投资人顺序索引
        var order = 1;
        //已计算的利息，为了给最后一个投资者计算利息，保证整体持平
        var loanRepayObjArr = calculateService.outRhjfAyfx(loanObj);
        var hadRepayObjArr = new Array(loanRepayObjArr.length);
        async.whilst(
            function () {
                return count > 0;
            },
            function (whileCb) {
                cursor.limit(startNum, calCons.split_num);
                cursor.toArray(function (err, data) {
                    var invest_repayTab = dc.main.get('invest_repay');
                    async.eachSeries(data, function (investObj, callback) {
                        var investRepayObjArr = calculateService.outRhjfAyfx(loanObj, investObj.money);
                        var _index = 0;
                        var invest_interest = 0;
                        var invest_st_interest = 0;
                        async.eachSeries(investRepayObjArr, function (investRepayObj, repayCall) {
                            var period = _index + 1;
                            if(hadRepayObjArr[_index] == undefined){
                                hadRepayObjArr[_index] = {};
                                hadRepayObjArr[_index].hadInterest = 0;
                            }
                            investRepayObj.id = investObj.id + '_' + period;
                            investRepayObj.invest_id = investObj.id;
                            //可以加即投息
                            investRepayObj.st_interest = 0;
                            investRepayObj.create_time = dateUtil.getCurTime();
                            investRepayObj.period = period;
                            investRepayObj.all_period = investRepayObjArr.length;
                            investRepayObj.status = 0; //0为还款  1已还
                            if (order == sumInvestNumber) {
                                //最后一个投资人，用总的借款利息减去其他投资人的利息，保证借款与投资方利息持平
                                investRepayObj.interest = loanRepayObjArr[_index].interest - hadRepayObjArr[_index].hadInterest;
                            } else {
                                hadRepayObjArr[_index].hadInterest += investRepayObj.interest;
                            }
                            //当前投资人投资记录更新
                            invest_interest += investRepayObj.interest;
                            invest_st_interest += investRepayObj.st_interest;
                            _index++;
                            invest_repayTab.save(investRepayObj, [], function (err) {
                                if(err){
                                    invest_repayTab.update({id: investRepayObj.id}, {
                                        $set: investRepayObj
                                    }, [], function (err) {
                                        repayCall();
                                    })
                                }else{
                                    repayCall();
                                }
                            });
                        }, function (err) {
                            investTab.update({id: investObj.id}, {
                                $set: {
                                    interest: invest_interest,
                                    st_interest: invest_st_interest
                                }
                            }, [], function (err) {
                                order++;
                                callback();
                            })
                        });
                    }, function (err) {
                        i++;
                        startNum = i * calCons.split_num;
                        count -= calCons.split_num;
                        whileCb();
                    });
                });
            },
            function (err) {
                if (!err) {
                    //todo 保存借款人还款记录
                    var loan_repayTab = dc.main.get('loan_repay');
                    loan_repayTab.dateToString();
                    var loanRepayPeriod=1;
                    async.eachSeries(loanRepayObjArr, function (loanRepayObj, loanRepayCall) {
                        loanRepayObj.id = loanObj.id + '_' + loanRepayPeriod;
                        loanRepayObj.loan_id = loanObj.id;
                        loanRepayObj.st_interest = 0;//-----需叠加
                        //可以加即投息
                        loanRepayObj.period = loanRepayPeriod;
                        loanRepayObj.all_period = loanRepayObjArr.length;
                        loanRepayObj.status = 0; //0为还款  1已还
                        loanRepayObj.create_time = dateUtil.getCurTime(); //保存时记录
                        loanRepayPeriod++;
                        loan_repayTab.save(loanRepayObj, [], function (err) {
                            if(err){
                                console.log(loanRepayObj);
                                loan_repayTab.update({id: loanRepayObj.id}, {
                                    $set: loanRepayObj
                                }, [], function (err) {
                                    loanRepayCall();
                                });
                            }else{
                                loanRepayCall();
                            }
                        });
                    }, function (err) {
                        cb(true);
                    });
                } else {
                    cb(false);
                }
            }
        );
    });
};


var rhAyfxOutEngine = new RhAyfxOutEngine();
module.exports = rhAyfxOutEngine;