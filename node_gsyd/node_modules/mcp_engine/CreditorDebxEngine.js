/**
 * Created by liujun on 2016/7/25.
 */
'use strict';

var async = require('async');
var service = require('mcp_service');
var calculateService = service.calculateService;
var creditorCalculateService = service.creditorCalculateService;

console.log("5555555555555555555555555555");
console.dir(service);
console.log("66666666666666666666666666666");

var cons = require('mcp_constants');
var calCons = cons.calculateCons;

var esut = require('easy_util');
var dateUtil = esut.dateUtil;

var util = require('mcp_util');
var dateMathUtil = util.dateMathUtil;

var dc = require('mcp_db').dc;


var CreditorDebxEngine = function () {
    var self = this;
};

/**
 * 等额本息的本金和利息操作
 * 债权购买
 */
CreditorDebxEngine.prototype.debxCreditor = function (id,money,creditorLoanObj,i,j,loanObj,loanRepayObj,curRepayDay,curDay,preRepayDay,data,investObj, cb) {
console.log("标的的总利息为：" + data);
    async.whilst(
        function () {
            return j - i >= 0;
        },
        function (whileCb) {

            var creditor_invest_repayTab = dc.main.get('creditor_invest_repay');
            var investTab = dc.main.get('invest_repay');

            var _index = i;
            var period = _index;
            var investRepayId = investObj.id + '_' + period;
            var tran_money = 4.00;
            var tran_interest = 1.00;

            //当月应还本金、利息
            var repay = calculateService.deMonthSumCal(loanObj.rate,loanObj.money,loanObj.deadline);
            var interest = calculateService.deMonthInterestCal(loanObj.rate, loanObj.money,repay,i);
            console.log("当月应还款：" + repay);
            console.log("当月应还利息：" + interest);
            //参数值
            var total_price = creditorLoanObj.total_price;
            var moneyCur = repay - interest;
            //当期应还本金
            money2 = creditorCalculateService.acceptmoney(money,total_price,moneyCur);
            //这个值为对象
            console.log("-------------------1" + data);
            var totalInterest = Math.round((money/(loanObj.money))*data);
            //业务参数处理
            var money2;
            var interest2 = 0.00;
            var tempMoney = 0.00;
            var tempInterest = 0.00;

            //受让人本金利息
            if(period == i) {
                interest2 = creditorCalculateService.acceptinterestCur(curRepayDay,curDay,preRepayDay,money,total_price,interest);
            }else {
                interest2 = creditorCalculateService.acceptinterest(money,total_price,interest);
            }
            tempMoney += money2;
            tempInterest += interest2;

            if (period == loanObj.deadline) {console.log("-----------期数" + period);
                console.log("-------------------1" + money);
                console.log("-------------------2" + tempMoney);
                console.log("-------------------3" + totalInterest);
                console.log("-------------------4" + tempInterest);
                money2 = money - tempMoney;
                interest2 = totalInterest - tempInterest;
                console.log("-------------------5" + money2);
                console.log("-------------------6" + interest2);
            }

            var cond = {};
            cond.id = id + '_' + period;
            cond.money = money2;
            cond.interest = interest2;
            cond.creditor_invest_id = id;
            cond.period = period;
            cond.all_period = loanObj.deadline;
            cond.create_time = dateUtil.getCurTime();
            cond.status = 0;

            creditor_invest_repayTab.save(cond, [], function (err) {
                if(err) {
                    console.log(err);
                } else {
                    investTab.update({id: investRepayId}, {$set: {tran_money: tran_money,tran_interest: tran_interest}}, [], function (err) {
                        i++;
                        whileCb();
                    });
                }

            });
        },
        function (err) {
            if(err) {
                //处理
                console.log(err);
            } else {
                cb(err);
            }
        }
    );
}


var creditorDebxEngine = new CreditorDebxEngine();
module.exports = creditorDebxEngine;